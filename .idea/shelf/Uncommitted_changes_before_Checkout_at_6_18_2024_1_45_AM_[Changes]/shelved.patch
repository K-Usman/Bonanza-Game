Index: Bonanzza-Project/src/main/java/org/example/Building.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport java.util.*;\r\n\r\npublic class Building\r\n{\r\n\r\n\r\n    ArrayList<String> buildingDeck;\r\n    Map<String, List<String>>  buildingdata;\r\n    String type;\r\n    String bean;\r\n//    int price;\r\n    String attribute;\r\n\r\n\r\n\r\n    //    Building(String type,String bean, int price, String attribute) {\r\n//        this.type = type;\r\n//        this.bean = bean ;\r\n//        this.price = price;\r\n//        this.attribute = attribute;\r\n//    }\r\n    Building(){\r\n        buildingDeck = new ArrayList<>();\r\n        buildingdata = new HashMap<>();\r\n        createBuildingDeck();\r\n\r\n    }\r\n    public void setType(String type) {\r\n        this.type = type;\r\n    }\r\n\r\n    public void setBean(String bean) {\r\n        this.bean = bean;\r\n    }\r\n\r\n//    public void setPrice(int price) {\r\n//        this.price = price;\r\n//    }\r\n\r\n    public void setAttribute(String attribute) {\r\n        this.attribute = attribute;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public String getBean() {\r\n        return bean;\r\n    }\r\n\r\n//    public int getPrice() {\r\n//        return price;\r\n//    }\r\n\r\n    public String getAttribute() {\r\n        return attribute;\r\n    }\r\n    public ArrayList<String> getBuildingDeck() {\r\n        return buildingDeck;\r\n    }\r\n    public  Map<String, List<String>> getBuildingdata() {\r\n        return buildingdata;\r\n    }\r\n    private void addBuilding(String type, String bean, int price, String attributes) {\r\n//        Map<String, String[]> buildingMetadata = new HashMap<>();\r\n        List<String> list = Arrays.asList(type, String.valueOf(price), attributes);\r\n        buildingdata.put(bean, list);\r\n        buildingDeck.add(type);\r\n//        buildingdata.put(bean,buildingMetadata);\r\n    }\r\n\r\n    private void createBuildingDeck() {\r\n//        ArrayList<Building> buildings = new ArrayList<>();\r\n        // Add building data\r\n        System.out.println(\"create Building working?  \");\r\n        addBuilding(\"1 Jail\",\"Blue Beans\", 1, \"None\");\r\n        addBuilding(\"2 Jail\",\"Blue Beans\", 2, \"Uses beanometer on the 2 Jail card\");\r\n        addBuilding(\"3 Jail\",\"Blue Beans\", 3, \"Uses beanometer on the 3 Jail card\");\r\n        addBuilding(\"4 Jail\",\"Blue Beans\", 4, \"The owner of the 4 Jail must watch for any harvest of blue beans by any player (including himself)\");\r\n        addBuilding(\"1 Blacksmith\",\"Chili beans\", 1, \"None\");\r\n        addBuilding(\"2 Blacksmith\",\"Chili beans\", 2, \"The 2 Blacksmith is like a “3rd bean field\");\r\n        addBuilding(\"3 Blacksmith\",\"Chili beans\", 3, \"The 3 Blacksmith uses the beanometer on the 3 blacksmith card when harvesting chili beans instead of the beanometer on the chili bean cards\");\r\n        addBuilding(\"4 Blacksmith\",\"Chili beans\", 4, \"The owner of the 4 Blacksmith may harvest a field with only one bean\");\r\n        addBuilding(\"1 General Store\", \"Stink beans\", 1, \"None\");\r\n        addBuilding(\"2 General Store\", \"Stink beans\", 2, \"The owner may store 1 Bean Card\");\r\n        addBuilding(\"3 General Store\", \"Stink beans\", 3, \"The owner may store 2 Bean Card\");\r\n        addBuilding(\"4 General Store\", \"Stink beans\", 4, \"The owner may store 3 Bean Card\");\r\n        addBuilding(\"1 Saloon\", \"Green beans\", 1, \"None\");\r\n        addBuilding(\"2 Saloon\", \"Green beans\", 2, \"The 2 Saloon is like a “3rd bean field”, but only green beans may be planted there\");\r\n        addBuilding(\"3 Saloon\", \"Green beans\", 3, \"The owner may may choose to plant one bean each of different types in one or more of his fields (BeanStewPlanting)\");\r\n        addBuilding(\"4 Saloon\", \"Green beans\", 4, \"The owner may may choose to plant one bean each of different types in one or more of his fields (BeanStewPlanting)\");\r\n        addBuilding(\"1 Farm\", \"Soy beans\", 1, \"None\");\r\n        addBuilding(\"2 Farm\", \"Soy beans\", 2, \"The attribute of the 2 Farm allows a player to plant soy beans in a field that already has other beans (numbered 14 or higher)\");\r\n        addBuilding(\"3 Farm\", \"Soy beans\", 3, \"The owner of the 3 Farm must always, like others, plant at least one bean card in phase\");\r\n        addBuilding(\"4 Farm\", \"Soy beans\", 4, \"The owner earns 5 gold coins from a harvest that would normally earn him exactly 4 gold coins\");\r\n        addBuilding(\"1 Bank\", \"Black-eyed beans\", 1, \"None\");\r\n        addBuilding(\"2 Bank\", \"Black-eyed beans\", 2, \" The attribute of the Bank must be taken at the exact time indicated on the card.\");\r\n        addBuilding(\"3 Bank\", \"Black-eyed beans\", 3, \" The attribute of the Bank must be taken at the exact time indicated on the card.\");\r\n        addBuilding(\"4 Bank\", \"Black-eyed beans\", 4, \" The attribute of the Bank must be taken at the exact time indicated on the card.\");\r\n        addBuilding(\"1 Indian tipi\", \"Red beans\", 1, \"None\");\r\n        addBuilding(\"2 Indian tipi\", \"Red beans\", 2, \"Earns an additional gold coin\");\r\n        addBuilding(\"3 Indian tipi\", \"Red beans\", 3, \"Earns an additional gold coin\");\r\n        addBuilding(\"4 Indian tipi\", \"Red beans\", 4, \"Earns an additional gold coin\");\r\n        addBuilding(\"1 Gold mine\", \"Garden beans\", 1, \"None\");\r\n        addBuilding(\"2 Gold mine\", \"Garden beans\", 2, \"Pays only 1 gold coin for a 3rd bean field\");\r\n        addBuilding(\"3 Gold mine\", \"Garden beans\", 3, \"Uses beanometer on the gold mine card\");\r\n        addBuilding(\"4 Gold mine\", \"Garden beans\", 4, \"Additional bean field\");\r\n        // Add other buildings as per rules\r\n//        System.out.println(buildings);\r\n//        return buildings;\r\n    }\r\n    public void shuffleBuilding() {\r\n        Collections.shuffle(buildingDeck) ;\r\n    }\r\n\r\n}\r\n
===================================================================
diff --git a/Bonanzza-Project/src/main/java/org/example/Building.java b/Bonanzza-Project/src/main/java/org/example/Building.java
--- a/Bonanzza-Project/src/main/java/org/example/Building.java	
+++ b/Bonanzza-Project/src/main/java/org/example/Building.java	
@@ -78,7 +78,7 @@
         System.out.println("create Building working?  ");
         addBuilding("1 Jail","Blue Beans", 1, "None");
         addBuilding("2 Jail","Blue Beans", 2, "Uses beanometer on the 2 Jail card");
-        addBuilding("3 Jail","Blue Beans", 3, "Uses beanometer on the 3 Jail card");
+        addBuilding("3 Jail","Blue Beans", 3, "Uses beanometer on t he 3 Jail card");
         addBuilding("4 Jail","Blue Beans", 4, "The owner of the 4 Jail must watch for any harvest of blue beans by any player (including himself)");
         addBuilding("1 Blacksmith","Chili beans", 1, "None");
         addBuilding("2 Blacksmith","Chili beans", 2, "The 2 Blacksmith is like a “3rd bean field");
